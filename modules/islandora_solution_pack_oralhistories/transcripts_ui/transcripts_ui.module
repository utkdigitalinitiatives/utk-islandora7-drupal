<?php

/**
 * @file
 */

function transcripts_ui_tiers() {

  return variable_get('transcripts_ui_tiers', array());
}

function transcripts_ui_speaker_names() {

  return variable_get('transcripts_ui_speaker_names', array());
}

function transcripts_ui_init() {

  drupal_add_library('system', 'ui.button');
  drupal_add_library('system', 'jquery.bbq');
}

function transcripts_ui_permission() {

  $permissions = array();
  $permissions['administer transcripts ui'] = array(
    'title' => t('Administer ui'),
  );
  return $permissions;
}

function transcripts_ui_menu() {

  $items = array();
  $items['admin/islandora/solution_pack_config/oralhistories/transcripts'] = array(
    'title' => 'Transcripts UI',
    'description' => 'Administer Transcripts',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('transcripts_ui_admin'),
    'access arguments' => array('administer transcripts ui'),
    'file' => 'transcripts_ui.admin.inc',
        // 'type' => MENU_NORMAL_ITEM,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/islandora/solution_pack_config/oralhistories/transcripts'] = array(
    'title' => 'Transcripts UI',
    'description' => t('Transcripts UI settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('transcripts_ui_admin'),
    'access arguments' => array('administer transcripts ui'),
    'file' => 'transcripts_ui.admin.inc',
        // 'type' => MENU_DEFAULT_LOCAL_TASK,
    'type' => MENU_LOCAL_TASK,
    'weight' => -10,
  );

  return $items;
}

function transcripts_ui_theme() {

  return array(
    'transcripts_ui_transcript_controls' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
      'render element' => 'element',
    ),
    'transcripts_ui_transcript_options' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
      'render element' => 'element',
    ),
    'transcripts_ui_transcript_navigation' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
      'render element' => 'element',
    ),
    'transcripts_ui_transcript_search' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
      'render element' => 'element',
    ),
    'transcripts_ui_play_transcript' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
    ),
    'transcripts_ui_previous_tcu' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
    ),
    'transcripts_ui_same_tcu' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
    ),
    'transcripts_ui_next_tcu' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
    ),
    'transcripts_ui_playmode' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
    ),
    'transcripts_ui_speaker_name' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
      'variables' => array(
        'speaker_name' => array(),
        'speaker_turn' => '',
      ),
    ),
    'transcripts_ui_tcu_tier' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
      'variables' => array(
        'tier_name' => '',
        'tier_text' => '',
        'classes' => '',
      ),
    ),
    'transcripts_ui_play_tcu' => array(
      'path' => drupal_get_path('module', 'transcripts_ui') . '/theme',
      'file' => 'transcripts_ui.theme.inc',
      'render element' => 'element',
    ),
  );
}

function transcripts_ui_ui($module, $trid, $options) {

  $ui = new TranscriptUI($module, $trid, $options);
  return $ui;
}

function transcripts_ui_render($ui) {

  $vars = array(
    'trid' => $ui->trid,
    'transcript' => $ui->render['transcript'],
  );
  return array_merge($vars, transcripts_ui_render_controls($ui));
}

function transcripts_ui_render_controls($ui) {

  return array(
    'transcript_controls' => array(
      '#prefix' => "<div data-transcripts-role='transcript-controls' data-transcripts-id='{$ui->trid}'>",
      '#theme' => 'transcripts_ui_transcript_controls',
      'content' => array(
        'transcript_options' => array(
          '#theme' => 'transcripts_ui_transcript_options',
          'trid' => $ui->trid,
          'data_tiers' => $ui->tiers,
          'speaker_names' => $ui->speakernames,
          '#attached' => array(
            'js' => array(
              drupal_get_path('module', 'transcripts_ui') . '/js/transcripts_tier_selector.js',
            ),
          ),
        ),
        'transcript_navigation' => array(
          '#theme' => 'transcripts_ui_transcript_navigation',
          '#attached' => array(
            'js' => array(
              drupal_get_path('module', 'transcripts_ui') . '/js/transcripts_navigation.js',
            ),
          ),
        ),
        'transcript_search' => array(
          '#theme' => 'transcripts_ui_transcript_search',
          'search_form' => drupal_get_form('transcripts_ui_search_form', $ui),
        ),
      ),
      '#suffix' => "</div>",
    ),
  );
}

// 'viewer_selector' => drupal_get_form('transcripts_ui_viewer_selector', $ui->trid, $ui->viewers),
function transcripts_ui_viewer_selector($form, &$form_state, $trid, $viewer) {

  $form = array();

  $form['viewer_selector'] = array(
    '#type' => 'select',
    '#title' => t('Views'),
    '#options' => $viewer,
    '#attributes' => array('class' => array('viewer-select')),
  );
  $form['#attributes'] = array(
    'data-transcripts-role' => 'viewer-selector',
    'data-transcripts-id' => $trid,
  );
  $form['#attached']['js'] = array(drupal_get_path('module', 'transcripts_ui') . '/js/transcripts_ui_viewer_selector.js');

  return $form;
}

function transcripts_ui_search_form($form, &$form_state, $ui) {

  $form = array();
  $form['#id'] = 'transcripts-ui-search-form-' . $ui->trid;
  $form['#attributes'] = array(
    'class' => array('transcripts-ui-search-form', 'clearfix'),
    'data-transcripts-role' => array('transcript-search'),
    'data-transcripts-id' => array($ui->trid),
  );
  $form['#attached'] = array(
    'js' => array(drupal_get_path('module', 'transcripts_ui') . '/js/transcripts_search.js'),
  );

  $term = '';
  if (strlen($ui->options['term']) > 0) {
    $term = substr($ui->options['term'], 1, -1);
  }

  $form['search'] = array(
    '#prefix' => "<fieldset><legend class='sr-only'>Transcript search</legend>",
    '#suffix' => "</fieldset>",
  );
  $form['search']['input'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('transcript-search-input'),
    ),
  );
  $form['search']['input']['term'] = array(
    '#theme_wrappers' => array(),
    '#type' => 'textfield',
    '#default_value' => $term,
    '#attributes' => array('placeholder' => t('Search this transcript')),
  );
  $form['search']['input']['buttons'] = array(
    '#prefix' => "<span class='input-group-btn'>",
    '#suffix' => "</span>",
  );
  $form['search']['input']['buttons']['go'] = array(
    '#type' => 'button',
    '#id' => 'transcript-search-button-' . $ui->trid,
    '#value' => t('Search'),
    '#button_type' => 'submit ajax-trigger',
    '#attributes' => array(
      'type' => 'submit',
    ),
    '#ajax' => array(
      'callback' => 'transcripts_ui_ajax_hits',
      'wrapper' => 'transcripts-ui-transcript-' . $ui->trid,
      'progress' => array('type' => 'none'),
      'event' => 'click',
    ),
    '#post_render' => array('transcripts_ui_button_inner'),
    '#inner' => "<span class='glyphicon glyphicon-search'></span>",
  );
  $form['search']['input']['buttons']['reset'] = array(
    '#type' => 'button',
    '#id' => 'transcript-reset-button-' . $ui->trid,
    '#value' => t('Reset'),
    '#attributes' => array(
      'type' => 'reset',
    ),
    '#post_render' => array('transcripts_ui_button_inner'),
    '#inner' => "<span class='glyphicon glyphicon-reset'></span>",
  );
  $form['search']['input']['options'] = array(
    '#markup' => '<div class="transcript-search-options form-group">'
    . '<label class="radio-inline"><input type="radio" id="transcript-search-options-' . $ui->trid . '-0" name="transcript-search-options" checked="checked" data-value="0">' . t('Show All') . '</label>'
    . '<label class="radio-inline" ><input type="radio" id="transcript-search-options-' . $ui->trid . '-2" name="transcript-search-options" data-value="1">' . t('Only Results') . '</label>'
    . '</div>',
  );
  $form['search']['navigate'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('transcript-navigate-results'),
    ),
  );
  $form['search']['navigate']['progress'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('ajax-progress'),
    ),
  );
  $form['search']['navigate']['buttons'] = array(
    '#prefix' => "<div>",
    '#suffix' => "</div>",
  );
  $form['search']['navigate']['buttons']['next'] = array(
    '#type' => 'button',
    '#id' => 'transcript-nextresult-' . $ui->trid,
    '#value' => t('Next'),
    '#attributes' => array(
      'type' => 'button',
    ),
    '#post_render' => array('transcripts_ui_button_inner'),
    '#inner' => "<span class='glyphicon glyphicon-next'></span>",
  );
  $form['search']['navigate']['buttons']['previous'] = array(
    '#type' => 'button',
    '#id' => 'transcript-previousresult-' . $ui->trid,
    '#value' => t('Previous'),
    '#attributes' => array(
      'type' => 'button',
    ),
    '#post_render' => array('transcripts_ui_button_inner'),
    '#inner' => "<span class='glyphicon glyphicon-previous'></span>",
  );
  $form['search']['navigate']['count'] = array(
    '#prefix' => '<div><span id="transcript-results-count-' . $ui->trid . '" class="transcript-results-count" data-results-count="0">',
    '#suffix' => '</div>',
    '#markup' => '0 of 0',
  );
  $form['search']['trid'] = array(
    '#type' => 'hidden',
    '#value' => substr($ui->trid, 5),
  // chop off trid- prefix.
  );
  $form['search']['module'] = array(
    '#type' => 'hidden',
    '#value' => $ui->module,
  );

  return $form;
}

function transcripts_ui_button_inner($markup, $element) {

  $find = "<span>" . $element['#value'] . "</span>";
  $replace = $element['#inner'];
  $markup = str_replace($find, $replace, $markup);
  return $markup;
}

function transcripts_ui_ajax_hits($form, &$form_state) {

  $trid = $form_state['values']['trid'];
  $module = $form_state['values']['module'];
  $options = array(
    'term' => $form_state['values']['term'],
    'hits_only' => TRUE,
  );
  $ui = transcripts_ui_ui($module, $trid, $options);
  $tcus = $ui->render['transcript']['contents']['tcu_list'];

  $commands = array();
  foreach ($tcus as $tcu) {
    $commands[] = ajax_command_replace('#tiers-' . $tcu['tcu_tiers']['#tcuid'], drupal_render($tcu['tcu_tiers']));
  }
  $commands[] = ajax_command_settings(array('hasSearched' => TRUE, 'hitCount' => $ui->hitCount), TRUE);
  // need to merge settings.
  $commands[] = ajax_command_replace('#transcripts-ui-search-form-' . $ui->trid, drupal_render($ui->render['transcript_search']));
  return array('#type' => 'ajax', '#commands' => $commands);
}
